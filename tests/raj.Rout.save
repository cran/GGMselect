
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(GGMselect)
Loading required package: mvtnorm
Loading required package: lars
Loaded lars 1.2

Loading required package: gtools
Loaded GGMselect 0.1.8

> data2 = read.table("GaussianData.txt", header=TRUE)
> data=as.matrix(data2)
> set.seed(4)
> #GRest <- selectFast(data, family="C01")# Matrix singular.
>  print(GRest <- selectFast(data, family="C01", min.ev=0.01)) #OK
$C01
$C01$Neighb
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14]
1     8    0    0    0    0    0    0    0    0     0     0     0     0     0
2     6    0    0    0    0    0    0    0    0     0     0     0     0     0
3     0    0    0    0    0    0    0    0    0     0     0     0     0     0
4     0    0    0    0    0    0    0    0    0     0     0     0     0     0
5     7    0    0    0    0    0    0    0    0     0     0     0     0     0
6     2    0    0    0    0    0    0    0    0     0     0     0     0     0
7     5    0    0    0    0    0    0    0    0     0     0     0     0     0
8     1    0    0    0    0    0    0    0    0     0     0     0     0     0
9     0    0    0    0    0    0    0    0    0     0     0     0     0     0
10    0    0    0    0    0    0    0    0    0     0     0     0     0     0
11    0    0    0    0    0    0    0    0    0     0     0     0     0     0
12   14    0    0    0    0    0    0    0    0     0     0     0     0     0
13    0    0    0    0    0    0    0    0    0     0     0     0     0     0
14   12    0    0    0    0    0    0    0    0     0     0     0     0     0
15    0    0    0    0    0    0    0    0    0     0     0     0     0     0
16    0    0    0    0    0    0    0    0    0     0     0     0     0     0
   [,15]
1      0
2      0
3      0
4      0
5      0
6      0
7      0
8      0
9      0
10     0
11     0
12     0
13     0
14     0
15     0
16     0

$C01$crit.min
  K= 2.5 
252371.8 

$C01$G
   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
1  0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0
2  0 0 0 0 0 1 0 0 0  0  0  0  0  0  0  0
3  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
4  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
5  0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0
6  0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0
7  0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0
8  1 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
9  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
10 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
11 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
12 0 0 0 0 0 0 0 0 0  0  0  0  0  1  0  0
13 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
14 0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0
15 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
16 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0


> 
> print(GRest <- selectFast(data, family="LA")) # OK, mais voir le"VOIR SH" dans loop.c
$LA
$LA$Neighb
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14]
1     8    0    0    0    0    0    0    0    0     0     0     0     0     0
2     6    4   12   13    0    0    0    0    0     0     0     0     0     0
3    16   12   10   13   11    4    5    7   15     6     0     0     0     0
4     2    6    3    7    5   11   14   10    0     0     0     0     0     0
5     7   11    3   10    4   14   15   13    6     0     0     0     0     0
6     2    4    7   14    5    3   10   16    0     0     0     0     0     0
7     5   14    4    6    3   12   11   13   10    16     0     0     0     0
8     1    0    0    0    0    0    0    0    0     0     0     0     0     0
9     0    0    0    0    0    0    0    0    0     0     0     0     0     0
10   11   16    3   12   13   14    5    6    4     7     0     0     0     0
11   10    3   16   12   13    5    4   14   15     7     0     0     0     0
12   14    3   16   10   11   13    2   15    7     0     0     0     0     0
13    3   10   11   12   15   16    5    2    7     0     0     0     0     0
14   12   10   16    7    6    5   11    4   15     0     0     0     0     0
15   16   13    3    5   12   11   14    0    0     0     0     0     0     0
16   10    3   12   11   14   15   13    6    7     0     0     0     0     0
   [,15]
1      0
2      0
3      0
4      0
5      0
6      0
7      0
8      0
9      0
10     0
11     0
12     0
13     0
14     0
15     0
16     0

$LA$crit.min
  K= 2.5 
201185.3 

$LA$G
   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
1  0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0
2  0 0 0 1 0 1 0 0 0  0  0  1  1  0  0  0
3  0 0 0 1 1 1 1 0 0  1  1  1  1  0  1  1
4  0 1 1 0 1 1 1 0 0  1  1  0  0  1  0  0
5  0 0 1 1 0 1 1 0 0  1  1  0  1  1  1  0
6  0 1 1 1 1 0 1 0 0  1  0  0  0  1  0  1
7  0 0 1 1 1 1 0 0 0  1  1  1  1  1  0  1
8  1 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
9  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
10 0 0 1 1 1 1 1 0 0  0  1  1  1  1  0  1
11 0 0 1 1 1 0 1 0 0  1  0  1  1  1  1  1
12 0 1 1 0 0 0 1 0 0  1  1  0  1  1  1  1
13 0 1 1 0 1 0 1 0 0  1  1  1  0  0  1  1
14 0 0 0 1 1 1 1 0 0  1  1  1  0  0  1  1
15 0 0 1 0 1 0 0 0 0  0  1  1  1  1  0  1
16 0 0 1 0 0 1 1 0 0  1  1  1  1  1  1  0


> #selectQE(data) # Matrix singular.
> print(GRest <-selectQE(data, min.ev=0.01)) # OK
$G
   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
1  0 0 0 0 0 0 0 1 0  1  0  0  1  0  0  0
2  0 0 0 1 0 1 0 0 0  0  0  1  0  0  0  0
3  0 0 0 0 0 0 0 0 0  0  1  1  0  0  0  1
4  0 1 0 0 1 0 1 0 0  0  0  0  0  0  0  0
5  0 0 0 1 0 1 1 0 0  0  0  0  0  0  0  0
6  0 1 0 0 1 0 1 0 0  0  0  0  0  0  0  0
7  0 0 0 1 1 1 0 0 0  0  0  0  0  0  0  0
8  1 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
9  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
10 1 0 0 0 0 0 0 0 0  0  1  0  0  0  0  1
11 0 0 1 0 0 0 0 0 0  1  0  0  0  0  0  0
12 0 1 1 0 0 0 0 0 0  0  0  0  0  1  0  0
13 1 0 0 0 0 0 0 0 0  0  0  0  0  0  1  0
14 0 0 0 0 0 0 0 0 0  0  0  1  0  0  0  0
15 0 0 0 0 0 0 0 0 0  0  0  0  1  0  0  1
16 0 0 1 0 0 0 0 0 0  1  0  0  0  0  1  0

$crit.min
[1] 202449.7

$Neighb
   [,1] [,2] [,3]
1     8   10   13
2     4    6   12
3    11   12   16
4     2    5    7
5     4    6    7
6     2    5    7
7     4    5    6
8     1    0    0
9     0    0    0
10    1   11   16
11    3   10    0
12    2    3   14
13    1   15    0
14   12    0    0
15   13   16    0
16    3   10   15

> #GRest <- selectFast(data, family="EW") # all results are Na
> #GRest <- selectFast(data, family="EW", beta=400) # Matrix singular.
> # GRest <- selectFast(data, family="EW", beta=4000, tau=0.1) # Matrix singular.
> #GRest <- selectFast(data, family="EW", beta=4000, tau=0.1, h=0.0001) # Matrix singular.
> 
> print(GRest <- selectFast(data, family="EW", beta=4000,min.ev=0.01)) # OK
$EW
$EW$Neighb
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14]
1     0    0    0    0    0    0    0    0    0     0     0     0     0     0
2     6    4    0    0    0    0    0    0    0     0     0     0     0     0
3     0    0    0    0    0    0    0    0    0     0     0     0     0     0
4     2    0    0    0    0    0    0    0    0     0     0     0     0     0
5     7    0    0    0    0    0    0    0    0     0     0     0     0     0
6     2    0    0    0    0    0    0    0    0     0     0     0     0     0
7     5    0    0    0    0    0    0    0    0     0     0     0     0     0
8     9    0    0    0    0    0    0    0    0     0     0     0     0     0
9     8    0    0    0    0    0    0    0    0     0     0     0     0     0
10    0    0    0    0    0    0    0    0    0     0     0     0     0     0
11    0    0    0    0    0    0    0    0    0     0     0     0     0     0
12    0    0    0    0    0    0    0    0    0     0     0     0     0     0
13    0    0    0    0    0    0    0    0    0     0     0     0     0     0
14    0    0    0    0    0    0    0    0    0     0     0     0     0     0
15    0    0    0    0    0    0    0    0    0     0     0     0     0     0
16    0    0    0    0    0    0    0    0    0     0     0     0     0     0
   [,15]
1      0
2      0
3      0
4      0
5      0
6      0
7      0
8      0
9      0
10     0
11     0
12     0
13     0
14     0
15     0
16     0

$EW$crit.min
  K= 2.5 
246744.6 

$EW$G
   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
1  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
2  0 0 0 1 0 1 0 0 0  0  0  0  0  0  0  0
3  0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
4  0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0
5  0 0 0 0 0 0 1 0 0  0  0  0  0  0  0  0
6  0 1 0 0 0 0 0 0 0  0  0  0  0  0  0  0
7  0 0 0 0 1 0 0 0 0  0  0  0  0  0  0  0
8  0 0 0 0 0 0 0 0 1  0  0  0  0  0  0  0
9  0 0 0 0 0 0 0 1 0  0  0  0  0  0  0  0
10 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
11 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
12 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
13 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
14 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
15 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0
16 0 0 0 0 0 0 0 0 0  0  0  0  0  0  0  0


> 
> 
> 
> proc.time()
   user  system elapsed 
 13.184   0.100  13.311 
